resources:
- repo: self

stages:
- stage: Validate
  jobs:
  - job: Validate
    continueOnError: false
    steps:
    - publish: common-infrastructure
      artifact: terraform_out
    - task: TerraformInstaller@0
      displayName: 'Use Terraform v0.12.10'
      inputs:
        terraformVersion: 0.12.10
    - task: TerraformTaskV1@0
      displayName: 'terraform init'
      inputs:
        command: init
        workingDirectory: common-infrastructure
        backendType: azurerm
        backendServiceArm: 'Biner Azure Cloud'
        backendAzureRmResourceGroupName: 'terraform-rg'
        backendAzureRmStorageAccountName: 'gitopszootfstorage'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'gitopszoo.terraform.tfstate'
    - task: TerraformTaskV1@0
      displayName: 'terraform validate'
      inputs:
        command: validate
        workingDirectory: common-infrastructure
 

- stage: Deploy
  jobs:
    # track deployments on the environment
  - deployment: Deploy_Terraform
    pool:
      vmImage: 'ubuntu-latest'
    # creates an environment if it doesnâ€™t exist
    environment: 'DEV'
    strategy:
      # default deployment strategy
      runOnce:
        deploy:
          steps:
          # - download: current
          #   artifact: terraform_out
          - task: TerraformTaskV1@0
            displayName: 'terraform init'
            inputs:
              command: init
              workingDirectory: $(Pipeline.Workspace)/terraform_out
              backendType: azurerm
              backendServiceArm: 'Biner Azure Cloud'
              backendAzureRmResourceGroupName: 'terraform-rg'
              backendAzureRmStorageAccountName: 'gitopszootfstorage'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'gitopszoo.terraform.tfstate'
          - task: TerraformTaskV1@0
            displayName: 'terraform plan'
            inputs:
              command: plan
              workingDirectory: $(Pipeline.Workspace)/terraform_out
              environmentServiceName: 'Biner Azure Cloud'
              secureVarsFile: 'gitopszoo_conf.tfvars'
              commandOptions: '-out $(Pipeline.Workspace)/terraform_out/terraform_gitopszoo_out'
              terraformVersion: 0.12.10
          - task: TerraformTaskV1@0
            displayName: 'terraform apply'
            inputs:
              command: apply
              workingDirectory: $(Pipeline.Workspace)/terraform_out
              environmentServiceName: 'Biner Azure Cloud'
              commandOptions: '$(Pipeline.Workspace)/terraform_out/terraform_gitopszoo_out'
              terraformVersion: 0.12.10